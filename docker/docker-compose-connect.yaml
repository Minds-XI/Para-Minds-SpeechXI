services:
  connect:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - "8083:8083"
    networks:
      - localnet
    environment:
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group

      # internal topics
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: "10000"
      # plugin discovery + defaults
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"


      CONNECT_KEY_CONVERTER:  io.confluent.connect.protobuf.ProtobufConverter
      CONNECT_VALUE_CONVERTER:  io.confluent.connect.protobuf.ProtobufConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
    
      # üîê enable config providers
      # CONNECT_CONFIG_PROVIDERS: "env"
      # CONNECT_CONFIG_PROVIDERS_ENV_CLASS: "org.apache.kafka.common.config.provider.EnvVarConfigProvider"

      # mongo db config
      MONGO_USER: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_PASS: ${MONGO_INITDB_ROOT_PASSWORD}
    # volumes:
    #   - connect-data:/usr/share/confluent-hub-components
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8083/connector-plugins"]
      interval: 5s
      timeout: 3s
      retries: 30
  connect-init:
    image: bash:5.2   # or debian:bullseye-slim, ubuntu:22.04, etc.
    depends_on:
      connect:
        condition: service_healthy
    networks: [localnet]
    environment:
      CONNECT_URL: "http://connect:8083"
      CONNECTOR_DIR: "./connectors"
      REQUIRED_PLUGIN_CLASSES: "com.mongodb.kafka.connect.MongoSinkConnector"
    volumes:
      - ./connectors:/connectors:ro
      - ./scripts:/scripts:ro
    entrypoint: ["/usr/bin/env","bash","/scripts/connect-init.sh"]
    restart: "no"
volumes:
  connect-data:

networks:
  localnet: {}
